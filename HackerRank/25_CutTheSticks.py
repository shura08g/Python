'''
Представьте, что у вас кучка из N палочек. Палочки в этой кучке имеют длины:
A1, A2, ..., AN. Далее вы выполняете следующую операцию: находите все палочки,
которые длиннее, чем самая короткая палочка в кучке, и разламываете их на две
части, так чтобы одна из частей была равна по длине самой короткой палочке в
кучке; при этом для каждой палочки ту часть, которая равна по длине самой
короткой палочке, вы оставляете в кучке, а другую откладываете в сторону.
Таким образом после применения операции, у вас образуется две кучки: первая
(изначальная) будет состоять из N палочек, каждая из которых имеет одинаковую
длину (длина изначально минимальной по длине палочки), вторая (новая)
образована частями палочек, которые вы отложили в сторону.

Теперь представьте, что, применив операцию один раз и получив две кучки, вы
применяете операцию далее для новой кучки. А затем снова примените описанную
операцию для новой полученной кучки. И так далее вы будете делать, до тех пор,
пока отложенные палочки не будут равны по длине.

Вам заданы палочки в первоначальной кучке, вам требуется вывести
последовательность количества палочек в кучках в процессе применения описанной
операции.

Формат входных данных
В первой строке записано целое число N. В следующей строке записаны N целых
чисел Ai, разделенных пробелами.

Формат выходных данных
Выведите последовательность количеств палочек в кучках, по одному числу на
строку.

Ограничения
1 <= N <= 1000
1 <= Ai <= 1000

Входные данные
8
1 2 3 4 3 3 2 1

Выходные данные
8
6
4
1

Пояснение к примеру
Изначально задано 8 палочек. Применив первую операцию, мы отложим 6 палочек в
новую кучку. Длины палочек в новой кучке будут равны: 1,2,3,2,2,1.
Применив вторую операцию к палочкам в новой кучке, мы получим еще одну новую
кучку с длинами палочек: 1,2,1,1. Далее применив операцию к этим палочкам, мы
получим одну новую кучку с одной палочкой длины 1. На этом процесс закончится.

Таким образом последовательность количеств палочек в кучках: 8, 6, 4, 1.
'''
from collections import Counter


# Complete the cutTheSticks function below.
def cutTheSticks(arr):
    result = list()
    l = len(arr)
    for k, v in sorted(Counter(arr).items()):
        result.append(l)
        l -= v
    return result


def cutTheSticks2(arr):
    result = []
    result.append(len(arr))
    temp_arr = arr
    while len(temp_arr) > 1:
        min_num = min(temp_arr)
        temp = []
        for val in temp_arr:
            if val > min_num:
                temp.append(val - min_num)
        if len(temp) != 0:
            result.append(len(temp))
        temp_arr = temp
    return result


if __name__ == '__main__':
    # fptr = open(os.environ['OUTPUT_PATH'], 'w')
    # n = int(input())
    # arr = list(map(int, input().rstrip().split()))
    # result = cutTheSticks(arr)
    # fptr.write('\n'.join(map(str, result)))
    # fptr.write('\n')
    # fptr.close()

    arr = [1, 2, 3, 4, 3, 3, 2, 1]
    result = cutTheSticks(arr)
    print(result)  # [8, 6, 4, 1]

    arr = [1, 1, 1]
    result = cutTheSticks(arr)
    print(result)  # [3]

    arr = [5, 4, 4, 2, 2, 8]
    result = cutTheSticks(arr)
    print(result)  # [6, 4, 2, 1]

    arr = [2, 1]
    result = cutTheSticks(arr)
    print(result)  # [2, 1]

    arr = [1, 13, 3, 8, 14, 9, 4, 4]
    result = cutTheSticks(arr)
    print(result)  # [8, 7, 6, 4, 3, 2, 1]
