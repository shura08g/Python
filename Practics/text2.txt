

.NET Core имеет два основных компонента. Он включает небольшую рабочую среду, которая построена из той же базы кода, что и CLR.NET Framework. Среда выполнения .NET Core включает в себя те же GC и JIT (RyuJIT), но не включает такие функции, как домены приложений или безопасность доступа к коду. Среда выполнения поставляется через NuGet, как часть пакета [ASP.NET Core].

.NET Core также включает библиотеки базового класса. Эти библиотеки в основном имеют тот же код, что и библиотеки классов .NET Framework, но были учтены (удаление зависимостей), чтобы позволить нам отправлять меньший набор библиотек. Эти библиотеки отправляются как System. * Пакеты NuGet на NuGet.org.
и

[ASP.NET Core] - первая рабочая нагрузка, которая приняла .NET Core. [ASP.NET Core] работает как на .NET Framework, так и на .NET Core. Ключевое значение [ASP.NET Core] заключается в том, что он может работать на нескольких версиях [.NET Core] на одном компьютере. Веб-сайт A и веб-сайт B могут работать на двух разных версиях .NET Core на одной машине или использовать одну и ту же версию.
Вкратце: во-первых, была Microsoft.NET Framework, которая состоит из среды выполнения, выполняющей код приложения и библиотеки, и почти полностью документировано стандартная библиотека классов.

Время выполнения Common Language Runtime, которое реализует Common Language Инфраструктура, работает с JIT-компилятором для запуска байт-код CIL (ранее MSIL).

Спецификация и реализация Microsoft.NET были, учитывая ее историю и цель, очень ориентированы на Windows и IIS и "жирны". Существуют варианты с меньшим количеством библиотек, пространств имен и типов, но некоторые из них были полезны для разработки в Интернете или на рабочем столе или неприятный для порта с юридической точки зрения.


 
Итак, чтобы предоставить версию .NET, отличную от Microsoft, которая может работать на машинах, отличных от Windows, необходимо было разработать альтернативу. Для этого необходимо портировать не только среду выполнения, но и всю библиотеку классов Framework, чтобы она была хорошо принята. Кроме того, чтобы быть полностью независимым от Microsoft, потребуется компилятор для наиболее часто используемых языков.

Mono - одна из немногих, если не единственная альтернативная реализация runtime, который работает на разных ОС, помимо Windows,  почти все пространства имен из библиотеки классов Framework с .NET 4.5 и VB и С# компилятор.

Введите .NET Core: реализация с открытым исходным кодом runtime и минимальная библиотека базового класса. Все дополнительные функции поставляются через пакеты NuGet, развертывание конкретной среды выполнения, библиотек фреймворков и сторонних пакетов с самим приложением.

ASP.NET Core - это новая версия MVC и WebAPI, объединенная с тонкой абстракцией HTTP-сервера, которая работает в среде выполнения .NET Core, но также и в .NET Framework.

90 
ответ дан CodeCaster 13 нояб. '14 в 14:41 источникподелиться
Это подмножество .NET Framework, начатое с версии Compact Framework. Прогресс в Silverlight, Windows Store и Windows Phone. Ориентирован на то, чтобы поддерживать небольшое развертывание, подходящее для быстрой загрузки и устройств с ограниченными возможностями хранения. И проще поднять на не-Windows-платформах, безусловно, причина, по которой это было выбрано как издание с открытым исходным кодом. "Простые" и "дорогие" части CLR и библиотеки базового класса опущены.

В противном случае всегда легко распознать, когда вы нацелитесь на такую ??версию фреймворка, много недостатков будет отсутствовать. Вы будете использовать отдельный набор эталонных сборок, которые будут показывать только то, что поддерживается средой выполнения. Сохраняется на вашем компьютере в каталоге C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETCore.

Обновление: после выпуска .NETCore 2.0 я видел некоторые репрезентативные номера, которые дают достойное представление. За последние два года они работали над back-porting framework apis для .NETCore. Первоначально .NETCore 1.0 поддерживал 13 000 apis. В .NETCore 2.0 добавлено 20 000 apis, в результате чего общее количество данных достигло 32 000 и позволило загрузить примерно 70% существующих пакетов Nuget. Есть набор apis, которые слишком сильно привязаны к Windows, чтобы их можно было легко переносить в Linux и MacOS. В дополнение к недавно выпущенному пакету совместимости Windows он добавляет еще 20000 apis.

59 
ответ дан Hans Passant 13 нояб. '14 в 14:51 источникподелиться
Я нашел недавнюю статью, которую я нашел как короткий, так и очень хороший. Он охватывает .NET Standard,.NET Core и .NET Framework и их отношения. Очень рекомендую. К сожалению, нет времени приспосабливаться и размещать его здесь.

Содержание исходного ответа ниже:

Итак, на основе последней официальной записи по этому вопросу, вот некоторые ключевые моменты, которые я вижу:

.NET Core - это, по существу, вилка NET Framework, чья реализация также оптимизирована вокруг проблем факторинга.

Мы считаем, что .NET Core не является специфичным ни для .NET, ни для .NET ASP.NET 5 - BCL, а время выполнения - общее назначение и быть модульным. Таким образом, он формирует основу для всех будущих .NET. вертикалей.
Итак,.NET Native и ASP.NET 5 - всего лишь тестовые "темы" для новой конфигурации конфигурации, частично это возможно потому, что они совершенно разные:

enter image description here

см., они даже нуждаются в отдельном низкоуровневом уровне, но большая часть BCL по-прежнему распространена:

Мы считаем, что .NET Core не является специфичным ни для .NET, ни для .NET ASP.NET 5 - BCL, а время выполнения - общее назначение и быть модульным. Таким образом, он формирует основу для всех будущих .NET. вертикалей.
т.е. пурпурные прямоугольники сверху будут добавлены массово с новыми моделями приложений, но база останется общей.

Внедрение Nuget:

В отличие от .NET Framework платформа .NET Core будет поставляется как набор пакетов NuGet. Мы остановились на NuGet, потому что вот где большая часть библиотечной экосистемы уже есть.
Связь с текущими структурами:

Для Visual Studio 2015 наша цель - убедиться, что .NET Core является чистый подмножество .NET Framework. Другими словами, не было бы любые пробелы. После выхода Visual Studio 2015 наше ожидание заключается в том, что .NET Core будет работать быстрее, чем .NET Framework. Эта означает, что будут моменты времени, когда функция будет только доступных на платформах на базе .NET Core.
Резюме:

Платформа .NET Core - это новый .NET-стек, оптимизированный для открытого источника и гибкой доставки на NuGet. Работали с Mono, чтобы сделать его отличным для Windows, Linux и Mac, и Microsoft будет поддерживать его на всех трех платформах.

Сохраняли значения, которые .NET Framework приносит развитие корпоративного класса. Хорошо предлагать дистрибутивы .NET Core, которые представляют собой набор пакетов NuGet, которые мы тестировали и поддерживали вместе. Visual Studio остается вашим универсальным магазином для разработки. потребляющий Пакеты NuGet, которые являются частью дистрибутива, не требуют интернет-соединение.
В принципе, это можно рассматривать как .NET 4.6 с измененной моделью распространения, которая, одновременно, находится в процессе становления с открытым исходным кодом.

36 
ответ дан Petr Abdulin 08 дек. '14 в 8:09 источникподелиться
Текущая документация содержит хорошее объяснение того, что такое .NET Core, области использования и т.д. Следующие характеристики лучше всего определяют .NET Core:

Гибкое развертывание. Может быть включено в ваше приложение или установлено. бок о бок пользовательский или машинный.

Кросс-платформенный: работает в Windows, macOS и Linux; могут быть перенесены в другие ОС. Поддерживаемая операционная система Системы (ОС), процессоры и сценарии приложений со временем будут расти, предоставляемые Microsoft, другими компаниями и отдельными лицами.

Инструменты командной строки. Все сценарии продукта могут выполняться в командной строке.

Совместимый:.NET Core совместим с .NET Framework, Xamarin и Моно, через стандартную библиотеку .NET.

Открытый исходный код:.NET Core платформа является открытым исходным кодом, используя лицензии MIT и Apache 2. Документация лицензируется по CC-BY..NET Core - это .NET Foundation проект.

Поддерживается Microsoft:.NET Core поддерживается Microsoft, для поддержки .NET Core
И вот что такое .NET Core:

.NET runtime, которая предоставляет систему типов, сборку сборок, сборщик мусора, собственный интерфейс и другие основные сервисы.

Набор базовых библиотек, которые предоставляют примитивные типы данных, типы композиций приложений и основные утилиты.

Набор инструментов SDK и компиляторов языка, которые позволяют базовому опыту разработчиков, доступным в .NET Core SDK.Хост приложения "dotnet", который используется для запуска приложений .NET Core. Он выбирает среду выполнения и размещает среду выполнения, предоставляет политику загрузки сборки и запускает приложение. Тот же хост также используется для запуска инструментов SDK почти таким же образом.